{"version":3,"sources":["js/index1.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":";AAAA,IAAMA,EAAQ,SAAAC,GACH,OAAA,IAAIC,QACP,SAAAC,GAAWC,OAAAA,WAAW,WAAMD,OAAAA,EAAQF,IAAKA,MAG3CI,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAEnBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ","file":"index1.311c03ca.js","sourceRoot":"..\\src","sourcesContent":["const delay = ms => {\r\n    return new Promise(\r\n        resolve => setTimeout(() => resolve(ms), ms)\r\n    );\r\n};\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms\r\n\r\n\r\n/*Тренировка Задание 1\r\nconst delay = (ms, callNumber) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => resolve({ ms, callNumber }), ms);\r\n    });\r\n};\r\n\r\nconst logger = time => console.log(\r\n    `Resolved number ${time.callNumber} after ${time.ms}ms`\r\n);\r\n\r\nconst initialCount = 1;\r\nconst DELAY = 5000;\r\nfunction randomNumber() {\r\n    return Math.round(Math.random() * DELAY);\r\n}\r\nfunction makeCounter() {\r\n    let count = initialCount;\r\n\r\n    return function() {\r\n        return count++;\r\n    }\r\n}\r\n\r\nlet counter = makeCounter();\r\n\r\ndelay(randomNumber(), counter()).then(logger);\r\ndelay(randomNumber(), counter()).then(logger); \r\ndelay(randomNumber(), counter()).then(logger); \r\ndelay(randomNumber(), counter()).then(logger); */"]}