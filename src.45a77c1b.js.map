{"version":3,"sources":["index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":";;;AA+CA,aA/CA,QAAA,oBAGA,IAAMA,EAAQ,SAAAC,GACH,OAAA,IAAIC,QACP,SAAAC,GAAWC,OAAAA,WAAW,WAAMD,OAAAA,EAAQF,IAAKA,MAG3CI,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAEnBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ","file":"src.45a77c1b.js","sourceRoot":"..\\src","sourcesContent":["import './sass/main.scss';\n\n// Задание 1\nconst delay = ms => {\n    return new Promise(\n        resolve => setTimeout(() => resolve(ms), ms)\n    );\n};\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n\n\n/*Тренировка Задание 1\nconst delay = (ms, callNumber) => {\n    return new Promise((resolve) => {\n        setTimeout(() => resolve({ ms, callNumber }), ms);\n    });\n};\n\nconst logger = time => console.log(\n    `Resolved number ${time.callNumber} after ${time.ms}ms`\n);\n\nconst initialCount = 1;\nconst periodOfTime = 5000;\nfunction randomNumber() {\n    return Math.round(Math.random() * periodOfTime);\n}\nfunction makeCounter() {\n    let count = initialCount;\n\n    return function() {\n        return count++;\n    }\n}\n\nlet counter = makeCounter();\n\ndelay(randomNumber(), counter()).then(logger);\ndelay(randomNumber(), counter()).then(logger); \ndelay(randomNumber(), counter()).then(logger); \ndelay(randomNumber(), counter()).then(logger); */\n\n\n//Задание 2"]}